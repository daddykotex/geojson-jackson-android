apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode = VERSION_CODE
        versionName = VERSION_NAME

    }
    sourceSets {
        main.setRoot('src/main')
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

def isReleaseBuild() {
    return !LIBRARY_VERSION.contains("SNAPSHOT")
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: sonatypeSnapshotRepo) {
            authentication(userName: sonatypeUsername,
                    password: sonatypePassword)
        }

        pom.project {
            name POM_NAME
            packaging 'aar'
            description POM_DESC
            url GITHUB_URL

            scm {
                url GITHUB_REPO
                connection GITHUB_REPO
                developerConnection GITHUB_REPO
            }

            licenses {
                license {
                    name LICENSE_NAME
                    url LICENSE_URL
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id "daddykotex"
                    name "David Francoeur"
                    email "dfrancoeur04@gmail.com"
                }
            }
        }
    }
}


signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.fasterxml.jackson.core:jackson-databind:$JACKSON_VERSION"
    compile "com.fasterxml.jackson.core:jackson-core:$JACKSON_VERSION"
    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile "org.mockito:mockito-all:$MOCKITO_ALL_VERSION"
}
